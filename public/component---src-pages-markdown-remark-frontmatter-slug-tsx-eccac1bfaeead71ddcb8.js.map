{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-tsx-eccac1bfaeead71ddcb8.js","mappings":"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","sources":["webpack://totolog34/./node_modules/@mui/system/esm/Container/createContainer.js","webpack://totolog34/./node_modules/@mui/material/Container/Container.js","webpack://totolog34/./src/components/toc.tsx","webpack://totolog34/./src/pages/{MarkdownRemark.frontmatter__slug}.tsx"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","/* eslint-disable material-ui/mui-name-matches-component-name */\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import * as React from 'react'\nimport { Box, Typography } from '@mui/material'\n\ntype Props = {\n  html?: string\n}\n\nexport const Toc: React.FC<Props> = ({ html }) => {\n  if (html) {\n    return (\n      <Box>\n        <Typography component=\"div\" variant=\"h6\" sx={{ my: 1 }}>\n          目次\n        </Typography>\n        <Box\n          dangerouslySetInnerHTML={{ __html: html }}\n          sx={{ p: 1, backgroundColor: '#f5f2f0' }}\n        />\n      </Box>\n    )\n  }\n  return <></>\n}\n","import * as React from 'react'\nimport { graphql, Link, PageProps } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport { Layout } from '../components/layout'\nimport { Seo } from '../components/seo'\nimport { Button, Container, Typography } from '@mui/material'\nimport { Toc } from '../components/toc'\nimport styled from 'styled-components'\nimport { getTagPath } from '../script/common'\n\nconst StyledList = styled('ul')`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  padding: 0;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n  margin-inline: 0.5rem;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #000;\n`\n\nconst Template: React.FC<PageProps<Queries.TemplateQuery>> = ({\n  data,\n}: PageProps<Queries.TemplateQuery>) => {\n  const frontmatter = data.markdownRemark!.frontmatter\n  const html = data.markdownRemark!.html\n  const tags = frontmatter?.tags\n\n  return (\n    <Layout>\n      <Seo\n        title={frontmatter?.title ?? ''}\n        description={data.markdownRemark?.excerpt ?? ''}\n        image={frontmatter?.thumbnail?.publicURL ?? ''}\n      />\n      <Container maxWidth=\"md\" sx={{ py: 3 }}>\n        <Typography variant=\"h6\">{frontmatter!.date}</Typography>\n        <div className=\"blog-post-container\">\n          <h1>{frontmatter!.title}</h1>\n          {tags && (\n            <StyledList>\n              {frontmatter.tags?.map((value: string | null) => {\n                if (!value) {\n                  return undefined\n                }\n                return (\n                  <li key={value}>\n                    <Button size=\"small\" variant=\"contained\">\n                      <StyledLink to={`/tags/${getTagPath(kebabCase(value))}/`}>\n                        {value}\n                      </StyledLink>\n                    </Button>\n                  </li>\n                )\n              })}\n            </StyledList>\n          )}\n          {/* <StyledList>\n              {frontmatter.tags?.map((tag: string) => (\n                <li key={tag}>\n                  <Button size=\"small\" variant=\"contained\">\n                    <StyledLink to={`/tags/${getTagPath(kebabCase(tag))}/`}>\n                      {tag}\n                    </StyledLink>\n                  </Button>\n                </li>\n              )\n              )}\n            </StyledList> */}\n          <Toc html={data.markdownRemark?.tableOfContents ?? ''} />\n          <div className=\"blog-post\">\n            <div\n              className=\"blog-post-content\"\n              dangerouslySetInnerHTML={{ __html: html ?? '' }}\n            />\n          </div>\n        </div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Template\n\nexport const query = graphql`\n  query Template($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"YYYY-MM-DD\")\n        slug\n        title\n        tags\n        thumbnail {\n          publicURL\n        }\n      }\n      excerpt(pruneLength: 120)\n      tableOfContents(absolute: false)\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","Container","options","createStyledComponent","componentName","ContainerRoot","theme","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","xs","ref","className","component","other","classes","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","createContainer","Toc","_ref","html","React","Box","Typography","variant","sx","my","dangerouslySetInnerHTML","__html","p","backgroundColor","StyledList","styled","withConfig","displayName","componentId","StyledLink","Link","data","frontmatter","markdownRemark","tags","Layout","Seo","title","description","_data$markdownRemark","excerpt","image","thumbnail","_frontmatter$thumbnai2","publicURL","py","date","_frontmatter$tags","map","key","Button","size","to","getTagPath","kebabCase","_data$markdownRemark2","tableOfContents"],"sourceRoot":""}