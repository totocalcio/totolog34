{"version":3,"file":"component---src-pages-tags-tsx-cfa3765c2a6aa2fef964.js","mappings":"wKA2DA,UAhD6D,SAAC,GAGvD,IAFLA,EAEI,EAFJA,KACAC,EACI,EADJA,YAEMC,EAAQF,EAAKG,kBAAkBC,MAC/BC,EAAeL,EAAKK,aAClBC,EAAeN,EAAKG,kBAApBG,WACAC,EAAaN,EAAbM,IAER,GAAqB,IAAjBL,EAAMM,OAAc,CACtB,IAAMC,EAAS,QAAWF,EAAX,UACf,OACEG,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAAAA,KAAAA,KAAKD,GACLC,EAAAA,cAACE,EAAAA,EAAD,CAAKC,MAAOJ,IACZC,EAAAA,cAAAA,IAAAA,KAAAA,uBAKN,IAAMD,EAAS,QAAWF,EAAX,MAAoBD,EAApB,MAEf,OACEI,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAAAA,KAAAA,KAAKD,GAAa,OAClBC,EAAAA,cAACE,EAAAA,EAAD,CAAKC,MAAOJ,GAAa,QACzBC,EAAAA,cAACI,EAAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,oBAAqB,uCACrBC,IAAK,EACLC,YAAa,IAGdjB,EAAMkB,KAAI,SAACC,GACV,OACEX,EAAAA,cAACY,EAAAA,EAAD,CACED,KAAMA,EACNhB,aAAcA,EACdkB,IAAKF,EAAKG,YAAYC","sources":["webpack://totolog34/./src/pages/tags.tsx"],"sourcesContent":["import * as React from 'react'\nimport { graphql, PageProps } from 'gatsby'\nimport { Card } from '../components/card'\nimport { Layout } from '../components/layout'\nimport { Seo } from '../components/seo'\nimport { Box } from '@mui/material'\n\ntype Tag = {\n  tag?: string\n}\n\nconst TagsPage: React.FC<PageProps<Queries.TagsPageQuery>> = ({\n  data,\n  pageContext,\n}) => {\n  const posts = data.allMarkdownRemark.nodes\n  const defaultImage = data.defaultImage\n  const { totalCount } = data.allMarkdownRemark\n  const { tag }: Tag = pageContext\n\n  if (posts.length === 0) {\n    const tagHeader = `タグ: \"${tag}\" (0記事)`\n    return (\n      <Layout>\n        <h1>{tagHeader}</h1>\n        <Seo title={tagHeader} />\n        <p>該当するタグの投稿記事がありません。</p>\n      </Layout>\n    )\n  }\n\n  const tagHeader = `タグ: \"${tag}\" (${totalCount}記事)`\n\n  return (\n    <Layout>\n      <h1>{tagHeader || 'Tag'}</h1>\n      <Seo title={tagHeader || 'Tag'} />\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n          gap: 3,\n          marginBlock: 3,\n        }}\n      >\n        {posts.map((post) => {\n          return (\n            <Card\n              post={post}\n              defaultImage={defaultImage}\n              key={post.frontmatter.slug}\n            />\n          )\n        })}\n      </Box>\n    </Layout>\n  )\n}\n\nexport default TagsPage\n\nexport const query = graphql`\n  query TagsPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      nodes {\n        excerpt\n        frontmatter {\n          date\n          title\n          slug\n          description\n          tags\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData(\n                width: 200\n                placeholder: BLURRED\n                formats: [AUTO, WEBP, AVIF]\n              )\n            }\n          }\n        }\n      }\n    }\n    defaultImage: file(relativePath: { eq: \"default.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 200\n          placeholder: BLURRED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n    }\n  }\n`\n"],"names":["data","pageContext","posts","allMarkdownRemark","nodes","defaultImage","totalCount","tag","length","tagHeader","React","Layout","Seo","title","Box","sx","display","gridTemplateColumns","gap","marginBlock","map","post","Card","key","frontmatter","slug"],"sourceRoot":""}