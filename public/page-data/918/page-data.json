{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/918/","result":{"data":{"markdownRemark":{"html":"<p>詳しくは<a href=\"https://www.gatsbyjs.com/docs/tutorial/part-3/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">公式</a></p>\n<p>Gatsby ではプラグインを使用して様々な機能を使うことができます。\n流れとしては下記の通り</p>\n<ol>\n<li>npm を使用してプラグインをインストール。</li>\n<li>gatsby-config.jsファイルでプラグインを構成。</li>\n<li>必要に応じて、プラグイン機能を使用。</li>\n</ol>\n<h2 id=\"graphql-typegen\" style=\"position:relative;\"><a href=\"#graphql-typegen\" aria-label=\"graphql typegen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL Typegen</h2>\n<p><a href=\"https://github.com/d4rekanguok/gatsby-typescript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gatsby-plugin-graphql-codegen</a>が使えるとのことで見に行ったら<a href=\"https://www.gatsbyjs.com/plugins/gatsby-plugin-typegen/?=gatsby-plugin-typegen\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gatsby-plugin-typegen</a>使ってねって言われていた。</p>\n<blockquote>\n<p>Hi there ? Are you just looking for a way to generate graphql types for your graphql queries?\ngatsby-plugin-graphql-codegen is what you want. However, other maintainers and I haven't been able to keep this repo up to shape. Please have a look at @cometkim's graphql-plugin-typegen which does almost the same thing &#x26; better maintained. Still, ideas &#x26; PRs are all welcomed. If you'd like to help maintain this project, please feel free to reach out. Thank you, have a great day<br>\n<a href=\"https://github.com/d4rekanguok/gatsby-typescript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/d4rekanguok/gatsby-typescript</a></p>\n</blockquote>\n<p>と、思っていろいろ調べていたら v4.15.0 で<a href=\"https://www.gatsbyjs.com/docs/how-to/local-development/graphql-typegen/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GraphQL Typegen</a>の機能として提供されることとなったのらしいので、そちらを使う。</p>\n<ol>\n<li>gatsby develop する</li>\n<li>src/gatsby-types.d.ts のファイルが自動生成される</li>\n</ol>\n<p>前提条件として gatsby-config.js で graphqlTypegen が true となっている必要があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">graphqlTypegen</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>あとはクエリをかいていきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> PageProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'../components/layout'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">IndexPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> PageProps<span class=\"token operator\">&lt;</span>Queries<span class=\"token punctuation\">.</span>IndexPageQuery<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Layout<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>site<span class=\"token operator\">?.</span>siteMetadata<span class=\"token operator\">?.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query IndexPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> IndexPage</code></pre></div>\n<p>自動型生成がきかなくなるので、コンポーネント名(export default IndexPage)とクエリ名(query IndexPage)は一致させる必要があります。またパスカルケースが推奨されています。\nIndexPage の生成した型定義は IndexPageQuery のように Query をつけた名称で使います。\nPageProps  を import して、引数に { data }: PageProps&#x3C;Queries.IndexPageQuery> を設定します。これで取得したデータが data に格納されます。実際にデータを表示する時は下記のようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>site<span class=\"token operator\">?.</span>siteMetadata<span class=\"token operator\">?.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></code></pre></div>","frontmatter":{"date":"2022-07-24","slug":"/918","title":"Gatsbyでブログ作る④〜GraphQL Typegen","tags":["gatsby"],"thumbnail":{"publicURL":"/static/580269e30dd10d18bd6fac53dbde498f/1_tsOxXGb20o2zrCh6Sp5PYQ.png"}},"excerpt":"詳しくは公式 Gatsby ではプラグインを使用して様々な機能を使うことができます。\n流れとしては下記の通り npm を使用してプラグインをインストール。 gatsby-config.js…","tableOfContents":"<ul>\n<li><a href=\"#graphql-typegen\">GraphQL Typegen</a></li>\n</ul>"},"site":{"siteMetadata":{"title":"うさ技術"}}},"pageContext":{"id":"24d7f29b-db44-5eaa-8943-10e7d7c7083b","frontmatter__slug":"/918","__params":{"frontmatter__slug":"918"}}},"staticQueryHashes":["1304567263","209911134","3832698534"]}