{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/nextjs-website-tutorial3/","result":{"data":{"markdownRemark":{"html":"<p><a href=\"/nextjs-website-tutorial2\">前回</a>の続き</p>\n<h2 id=\"コンポーネント設計\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E8%A8%AD%E8%A8%88\" aria-label=\"コンポーネント設計 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンポーネント設計</h2>\n<p>コンポーネント設計ですが、以下の２つを検討しました。</p>\n<ul>\n<li>Presentational / Container\n<ul>\n<li><a href=\"https://zenn.dev/morinokami/books/learning-patterns-1/viewer/presentational-container-pattern\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">参考</a></li>\n</ul>\n</li>\n<li>Atomic Design</li>\n</ul>\n<p>検討といっても、多分だけど今回ロジック書くことなんてほぼないと思うのでAtomicデザインくらいだけ意識しようかなと思います。</p>\n<h2 id=\"storybook\" style=\"position:relative;\"><a href=\"#storybook\" aria-label=\"storybook permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storybook</h2>\n<p>今回の規模でいるかな・・・とは思いつつも、経験のために触ってみます。<br>\n参考：<a href=\"https://storybook.js.org/docs/react/get-started/introduction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">公式</a></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">npx sb@latest init</code></pre></div>\n<p>※　<code class=\"language-text\">stories</code>ディレクトリの下のファイルは削除して空にしておきます。</p>\n<h3 id=\"コンポーネント開発\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E9%96%8B%E7%99%BA\" aria-label=\"コンポーネント開発 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンポーネント開発</h3>\n<p>簡単なコンポーネントを1つ作成します。<br>\n<code class=\"language-text\">components/atoms/Button.tsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> Button<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">FC</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">button</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Button</code></pre></div>\n<p>次にStorybookで表示するために <code class=\"language-text\">Button.stories.tsx</code> を作成しますが、その前にStorybookでパスエイリアスの設定をします。<a href=\"/nextjs-website-tutorial/#%E3%83%91%E3%82%B9%E3%82%A8%E3%82%A4%E3%83%AA%E3%82%A2%E3%82%B9\">以前</a><code class=\"language-text\">tsconfig.json</code> でエイリアスの設定をしましたが、Storybookのバンドルの設定は独立して存在しているので、Storybook側の設定、<code class=\"language-text\">.storybook/main.js</code> を変更する必要があります。</p>\n<p>※　とても参考にしました<br>\n<a href=\"https://tamalog.szmd.jp/storybook-absolute-imports/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TypeScript + Gatsby + Storybook環境でimport aliasを利用する</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function-variable function\">webpackFinal</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    config<span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">.</span>alias <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>config<span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'@'</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../components'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>パスエイリアスの設定を行ったので、<code class=\"language-text\">stories/Button.stories.tsx</code> を作成します。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Story<span class=\"token punctuation\">,</span> Meta <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@storybook/react/types-6-0'</span>\n<span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">'@/atoms/Button'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'Button'</span><span class=\"token punctuation\">,</span>\n  component<span class=\"token operator\">:</span> Button<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> Meta\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Default<span class=\"token operator\">:</span> <span class=\"token function-variable function\">Story</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>Propsもなければデザインもありませんが、とりあえずstorybookに１つコンポーネントを登録することができました。</p>\n<h2 id=\"css\" style=\"position:relative;\"><a href=\"#css\" aria-label=\"css permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS</h2>\n<p>今回styled-componentsでもなくCSS Modulesでもなくemotion(@emotion/css)にします。今までMUIやstyled-componentsを試しましたが、いつも頭の隅にあるのは「Sassでいい…」でした。そのためある程度emotionでSassの機能を使いつつ、場合によっては素Sassをつくっていく予定です。基本的に同じファイルにCSSを書いてしまって、共通化のCSSなどは外出しするようにしていきます。</p>\n<p>参考：<a href=\"https://emotion.sh/docs/introduction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">公式</a></p>","frontmatter":{"date":"2022-09-25","slug":"/nextjs-website-tutorial3","title":"Next.jsでWebサイトを作る③〜コンポーネント開発","tags":["next.js"],"thumbnail":{"publicURL":"/static/be2b530e376a69515a70a8b518576575/nextjs-logo.png"}},"excerpt":"前回の続き コンポーネント設計 コンポーネント設計ですが、以下の２つを検討しました。 Presentational / Container 参考 Atomic Design…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E8%A8%AD%E8%A8%88\">コンポーネント設計</a></p>\n</li>\n<li>\n<p><a href=\"#storybook\">Storybook</a></p>\n<ul>\n<li><a href=\"#%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E9%96%8B%E7%99%BA\">コンポーネント開発</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#css\">CSS</a></p>\n</li>\n</ul>"},"site":{"siteMetadata":{"title":"うさ技術"}}},"pageContext":{"id":"d7d4a9bf-e280-5f59-9324-c74af89f612d","frontmatter__slug":"/nextjs-website-tutorial3","__params":{"frontmatter__slug":"nextjs-website-tutorial3"}}},"staticQueryHashes":["1753915958","209911134","3832698534"],"slicesMap":{}}